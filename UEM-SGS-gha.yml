name: Smart Group Service CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  osspi_bid: '2281'
  osspi_product_version: master
  osspi_rid: '000'

jobs:
  update-build-status:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Update build status on GitHub
      run: |
        curl -v POST "${{ secrets.GITHUB_WEBHOOK_URL }}" \
        --header 'Accept: application/vnd.github+json' \
        --header 'x-github-token: ${{ secrets.GITHUB_TOKEN }}' \
        --header 'Content-Type: application/json' \
        --data '{
          "event_type": "build_status",
          "client_payload": {
            "build_result_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "context": "${{ github.workflow }}",
            "commit_id": "${{ github.sha }}",
            "build_status": "InProgress",
            "build_plan_key": "${{ github.run_id }}",
            "build_number": "${{ github.run_number }}",
            "git_url": "${{ github.repository }}"
          }
        }'

  local-build:
    runs-on: ubuntu-latest
    needs: update-build-status
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Docker Cleanup
      run: |
        docker rm -f $(docker ps -aq)
        docker system prune -af

    - name: Git LFS Pull
      run: git lfs pull

    - name: Build and Test with Sonar
      run: |
        ./build.sh --target=Default --runSonar=true --should_publish_package=true --runBenchmark=false

    - name: Chown Build Directory
      run: sudo chown -R $USER:$USER ${{ github.workspace }}

    - name: Docker Cleanup
      run: |
        docker stop $(docker ps -aq)
        docker system prune -a -f

    - name: Upload Log Files
      uses: actions/upload-artifact@v2
      with:
        name: log-files
        path: '**/*.log'

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: artifacts/**/*

    - name: Upload Every Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: every-build-artifact
        path: '**/*.*'

  run-blue-green-tests:
    runs-on: ubuntu-latest
    needs: local-build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Docker Cleanup
      run: |
        docker stop $(docker ps -aq) >/dev/null 2>&1
        docker system prune -a -f >/dev/null 2>&1

    - name: Git LFS Pull
      run: git lfs pull

    - name: Run Blue Green Tests
      run: |
        ./build.sh --target=RunBGTests --runSonar=false --publishDockerImage=false

    - name: Chown Build Directory
      run: sudo chown -R $USER:$USER ${{ github.workspace }}

    - name: Docker Cleanup
      run: |
        docker stop $(docker ps -aq) >/dev/null 2>&1
        docker system prune -a -f >/dev/null 2>&1

    - name: Upload Log Files
      uses: actions/upload-artifact@v2
      with:
        name: log-files
        path: '**/*.log'

    - name: Upload Benchmark Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: benchmark-artifacts
        path: artifacts/benchmark/**/*

  build-test-container:
    runs-on: ubuntu-latest
    needs: run-blue-green-tests
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Docker Cleanup
      run: |
        docker stop $(docker ps -aq) >/dev/null 2>&1
        docker system prune -a -f >/dev/null 2>&1

    - name: Git LFS Pull
      run: git lfs pull

    - name: Build Docker Image
      run: |
        ./build.sh --target=DockerDefault --runSonar=false --publishDockerImage=true

    - name: Create Services Artifact
      run: zip -r services-artifact.zip services/

    - name: Chown Build Directory
      run: sudo chown -R $USER:$USER ${{ github.workspace }}

    - name: Docker Cleanup
      run: |
        docker stop $(docker ps -aq) >/dev/null 2>&1
        docker system prune -a -f >/dev/null 2>&1

    - name: Upload Log Files
      uses: actions/upload-artifact@v2
      with:
        name: log-files
        path: '**/*.log'

    - name: Upload Tag
      uses: actions/upload-artifact@v2
      with:
        name: tag
        path: tag.txt

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: build/artifact_info*.json

    - name: Upload Services Artifact
      uses: actions/upload-artifact@v2
      with:
        name: services-artifact
        path: services-artifact.zip

  code-provenance:
    runs-on: ubuntu-latest
    needs: build-test-container
    steps:
    - name: Checkout main repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout provenance repository
      uses: actions/checkout@v2
      with:
        repository: your-org/SRP-Provenance-Github
        path: srp-tools
        fetch-depth: 0

    - name: Run Provenance
      run: |
        cd srp-tools
        ./Provenance.sh '${{ github.event.head_commit.message }}' '${{ github.run_id }}' '${{ github.run_number }}' '${{ secrets.SRP_CLIENT_ID }}' '${{ secrets.SRP_CLIENT_SECRET }}' '${{ github.sha }}' '${{ github.ref_name }}'

    - name: Docker Cleanup
      run: ./bamboo-specs/scripts/common/docker_clean_rm.sh

notifications:
  pull_request:
    types: [completed]
  webhook:
    url: http://bbs2gh.ssdevrd.com:3000/webhook
  webhook:
    url: http://ws1-build-36-61.vmware.com:8080/api/v1/dags/post_build_dag_example/dagRuns
